name: Workflow-Release
on:
  workflow_dispatch:
#  push:
#    branches:
#      - broker_integration

env:
  AWS_SG_ID: sg-076d543453764ccea
  AWS_DEFAULT_REGION: ap-south-1
  HOST: 13.127.83.93
  USERNAME: ubuntu
  PASSWORD: _RoSWlJAtr+S@o-1&lSp
  PORT: 22
  IAMGE_NAME: ematade-trade-panel:latest
  AWS_ACCESS_KEY_ID: AKIAVCGVLWYNW2WP3JHI
  AWS_SECRET_ACCESS_KEY: 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

jobs:  
  deploy:
    runs-on: ubuntu-20.04
    name: Whitelisting CICD instance on Firewall.
    steps:
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32    
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          
      - name: Running remote commands for UAT server
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          port: ${{ env.PORT }}
          script: |
            chmod +x ~/dematade-userpanel-updated/deploy.sh
            bash ~/dematade-userpanel-updated/deploy.sh
            
      - name: Cleaning up all dangling resources across cluster.
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOSTS }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          port: ${{ env.PORT }}
          script: |
            docker system prune --force
      - name: Removing github IP address from EC2
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        if: always()
